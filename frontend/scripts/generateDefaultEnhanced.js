#!/usr/bin/env node

/**
 * Generate a fallback enhanced-artifacts.json file without requiring OpenAI API
 * This script creates default enhanced descriptions and details for all artifacts
 * and saves them to the public directory for the app to use.
 */

import { mediaItems } from '../src/utils/albumData.js';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// Get the directory name
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Output file path
const OUTPUT_FILE = path.join(__dirname, '..', 'public', 'enhanced-artifacts.json');

/**
 * Generate a default enhanced description for an artifact
 */
function generateDefaultDescription(title, description, type) {
  // Different templates based on artifact type
  if (type === '3d') {
    return `Ÿáÿ∞Ÿá ŸÇÿ∑ÿπÿ© "${title}" ÿ™ÿπÿ™ÿ®ÿ± ŸÖŸÜ ÿßŸÑŸÇÿ∑ÿπ ÿßŸÑÿ£ÿ´ÿ±Ÿäÿ© ÿßŸÑŸÖÿµÿ±Ÿäÿ© ÿßŸÑÿ®ÿßÿ±ÿ≤ÿ©. ${description} Ÿàÿ™ÿπŸÉÿ≥ ÿßŸÑŸÇÿ∑ÿπÿ© ÿ®ÿ±ÿßÿπÿ© ÿßŸÑŸÅŸÜÿßŸÜ ÿßŸÑŸÖÿµÿ±Ÿä ÿßŸÑŸÇÿØŸäŸÖ ŸÅŸä ÿßŸÑŸÜÿ≠ÿ™ ŸàÿßŸÑÿ™ÿ¥ŸÉŸäŸÑÿå Ÿàÿ™Ÿàÿ∂ÿ≠ ÿ¨ŸàÿßŸÜÿ® ŸÖŸáŸÖÿ© ŸÖŸÜ ÿßŸÑÿ≠ÿ∂ÿßÿ±ÿ© ÿßŸÑŸÖÿµÿ±Ÿäÿ© ÿßŸÑŸÇÿØŸäŸÖÿ©. ÿ™ŸÖ ÿßŸÑÿ≠ŸÅÿßÿ∏ ÿπŸÑŸâ Ÿáÿ∞Ÿá ÿßŸÑŸÇÿ∑ÿπÿ© ÿ®ÿ¥ŸÉŸÑ ÿ¨ŸäÿØ ÿπŸÑŸâ ŸÖÿ± ÿßŸÑÿ≥ŸÜŸäŸÜÿå ŸàŸáŸä ÿßŸÑÿ¢ŸÜ ŸÖŸÜ ÿßŸÑŸÖŸÇÿ™ŸÜŸäÿßÿ™ ÿßŸÑŸÖŸáŸÖÿ© ŸÅŸä ŸÖÿπÿ±ÿ∂ŸÜÿß.`;
  } else if (type === 'videos') {
    return `ŸÅŸäÿØŸäŸà "${title}" ŸäŸÇÿØŸÖ ŸÖÿ≠ÿ™ŸàŸâ ÿ™ÿπŸÑŸäŸÖŸä ŸÇŸäŸÖ ÿπŸÜ ÿ™ÿßÿ±ŸäÿÆ ŸÖÿµÿ± ÿßŸÑŸÇÿØŸäŸÖÿ©. ${description} Ÿäÿ™ÿ∂ŸÖŸÜ ÿßŸÑŸÅŸäÿØŸäŸà ÿ¥ÿ±ÿ≠Ÿãÿß ÿ™ŸÅÿµŸäŸÑŸäŸãÿß ŸàŸÖÿπŸÑŸàŸÖÿßÿ™ ÿ™ÿßÿ±ŸäÿÆŸäÿ© ÿØŸÇŸäŸÇÿ© ÿ™ÿ≥ÿßÿπÿØ ÿßŸÑÿ≤ÿßÿ¶ÿ± ÿπŸÑŸâ ŸÅŸáŸÖ ÿßŸÑÿ≥ŸäÿßŸÇ ÿßŸÑÿ™ÿßÿ±ŸäÿÆŸä ŸàÿßŸÑÿ´ŸÇÿßŸÅŸä ŸÑŸÑÿ≠ÿ∂ÿßÿ±ÿ© ÿßŸÑŸÖÿµÿ±Ÿäÿ©.`;
  } else {
    return `ÿµŸàÿ±ÿ© "${title}" ÿ™ÿπÿ±ÿ∂ ŸÇÿ∑ÿπÿ© ÿ£ÿ´ÿ±Ÿäÿ© ŸÜÿßÿØÿ±ÿ© ŸÖŸÜ ÿßŸÑŸÖÿ™ÿ≠ŸÅ. ${description} ÿ™ÿ∏Ÿáÿ± ÿßŸÑÿµŸàÿ±ÿ© ÿßŸÑÿ™ŸÅÿßÿµŸäŸÑ ÿßŸÑÿØŸÇŸäŸÇÿ© ŸàÿßŸÑÿ≤ÿÆÿßÿ±ŸÅ ÿßŸÑŸÖŸÖŸäÿ≤ÿ© ÿßŸÑÿ™Ÿä ÿ™ÿπŸÉÿ≥ ÿßŸÑŸÅŸÜ ÿßŸÑŸÖÿµÿ±Ÿä ÿßŸÑŸÇÿØŸäŸÖ Ÿàÿ£ÿ≥ÿßŸÑŸäÿ® ÿßŸÑÿµŸÜÿßÿπÿ© ÿßŸÑÿØŸÇŸäŸÇÿ©. ÿ™ÿπÿ™ÿ®ÿ± Ÿáÿ∞Ÿá ÿßŸÑŸÇÿ∑ÿπÿ© ÿ¥ÿßŸáÿØŸãÿß ÿπŸÑŸâ ÿ•ÿ®ÿØÿßÿπ ÿßŸÑŸÅŸÜÿßŸÜ ÿßŸÑŸÖÿµÿ±Ÿä ÿßŸÑŸÇÿØŸäŸÖ.`;
  }
}

/**
 * Generate default details for an artifact
 */
function generateDefaultDetails(title, description, type) {
  // Create appropriate details based on artifact type
  if (type === '3d') {
    return {
      period: 'ÿßŸÑÿπÿµÿ± ÿßŸÑŸÅÿ±ÿπŸàŸÜŸä ÿßŸÑÿ≠ÿØŸäÿ´',
      location: 'ŸÖÿµÿ± ÿßŸÑŸÇÿØŸäŸÖÿ©',
      material: 'ÿ≠ÿ¨ÿ± ÿ¨Ÿäÿ±Ÿä / ÿ®ÿ±ŸàŸÜÿ≤ / ÿÆÿ¥ÿ®',
      dimensions: 'ŸÖÿ™ŸÜŸàÿπÿ©',
      story: `ŸÇÿ∑ÿπÿ© "${title}" ÿ™ŸÖÿ´ŸÑ ÿ¨ÿ≤ÿ°Ÿãÿß ŸÖŸáŸÖŸãÿß ŸÖŸÜ ÿßŸÑÿ™ÿßÿ±ŸäÿÆ ÿßŸÑŸÖÿµÿ±Ÿä ÿßŸÑŸÇÿØŸäŸÖ. ${description} ÿ™ŸÖ ÿßŸÉÿ™ÿ¥ÿßŸÅ Ÿáÿ∞Ÿá ÿßŸÑŸÇÿ∑ÿπÿ© ÿÆŸÑÿßŸÑ ÿßŸÑÿ≠ŸÅÿ±Ÿäÿßÿ™ ÿßŸÑÿ£ÿ´ÿ±Ÿäÿ© Ÿàÿ™ÿπÿ™ÿ®ÿ± ÿ¥ÿßŸáÿØŸãÿß ÿπŸÑŸâ ÿßŸÑÿ•ÿ®ÿØÿßÿπ ŸàÿßŸÑÿ™ÿ∑Ÿàÿ± ÿßŸÑŸÅŸÜŸä ŸàÿßŸÑÿ™ŸÇŸÜŸä ŸÅŸä ÿßŸÑÿ≠ÿ∂ÿßÿ±ÿ© ÿßŸÑŸÖÿµÿ±Ÿäÿ© ÿßŸÑŸÇÿØŸäŸÖÿ©. ÿ™ÿÆÿ®ÿ±ŸÜÿß Ÿáÿ∞Ÿá ÿßŸÑŸÇÿ∑ÿπÿ© ŸÇÿµÿ© ÿπŸÜ ÿßŸÑÿ≠Ÿäÿßÿ© ÿßŸÑŸäŸàŸÖŸäÿ© ŸàÿßŸÑŸÖÿπÿ™ŸÇÿØÿßÿ™ ÿßŸÑÿØŸäŸÜŸäÿ© ŸàÿßŸÑÿ£ÿ≥ÿßŸÑŸäÿ® ÿßŸÑŸÅŸÜŸäÿ© ŸÑŸÑŸÖÿµÿ±ŸäŸäŸÜ ÿßŸÑŸÇÿØŸÖÿßÿ°.`
    };
  } else {
    return {
      period: 'ŸÖÿ™ŸÜŸàÿπ',
      location: 'ŸÖÿµÿ±',
      material: 'ŸÖÿ™ŸÜŸàÿπ',
      dimensions: 'ÿ∫Ÿäÿ± ŸÖÿ≠ÿØÿØ',
      story: `${description} Ÿáÿ∞Ÿá ÿßŸÑŸÇÿ∑ÿπÿ© ÿ™ÿπŸÉÿ≥ ÿ¨ÿßŸÜÿ®Ÿãÿß ŸÖŸáŸÖŸãÿß ŸÖŸÜ ÿ¨ŸàÿßŸÜÿ® ÿßŸÑÿ≠ÿ∂ÿßÿ±ÿ© ÿßŸÑŸÖÿµÿ±Ÿäÿ© ÿßŸÑŸÇÿØŸäŸÖÿ© ŸàŸÅŸÜŸàŸÜŸáÿß ÿßŸÑŸÖÿ™ŸÜŸàÿπÿ©. ÿ™ÿ≥ÿßÿπÿØŸÜÿß ÿπŸÑŸâ ŸÅŸáŸÖ ÿßŸÑÿπÿßÿØÿßÿ™ ŸàÿßŸÑÿ™ŸÇÿßŸÑŸäÿØ Ÿàÿ£ÿ≥ÿßŸÑŸäÿ® ÿßŸÑÿ≠Ÿäÿßÿ© ŸÅŸä ÿ™ŸÑŸÉ ÿßŸÑŸÅÿ™ÿ±ÿ© ÿßŸÑÿ™ÿßÿ±ŸäÿÆŸäÿ© ÿßŸÑŸÖŸáŸÖÿ©.`
    };
  }
}

console.log('üöÄ Generating default enhanced artifacts data...');
console.log(`Total artifacts to process: ${mediaItems.length}`);

// Create enhanced version of all media items
const enhancedItems = mediaItems.map((item, index) => {
  console.log(`Processing (${index + 1}/${mediaItems.length}): ${item.title}`);
  
  // Create an enhanced description
  const enhancedDescription = generateDefaultDescription(item.title, item.description, item.type);
  
  // Create details object if it doesn't exist
  const enhancedDetails = item.details || generateDefaultDetails(item.title, item.description, item.type);
  
  // If it has details but no story, add a story
  if (!enhancedDetails.story) {
    enhancedDetails.story = generateDefaultDescription(item.title, item.description, item.type);
  }
  
  return {
    ...item,
    description: enhancedDescription,
    details: enhancedDetails
  };
});

// Make sure the public directory exists
const publicDir = path.join(__dirname, '..', 'public');
if (!fs.existsSync(publicDir)) {
  fs.mkdirSync(publicDir, { recursive: true });
  console.log('üìÅ Created public directory');
}

// Save the enhanced data to a JSON file
fs.writeFileSync(OUTPUT_FILE, JSON.stringify(enhancedItems, null, 2), 'utf-8');
console.log(`\n‚úÖ Default enhanced artifacts data saved to: ${OUTPUT_FILE}`);
console.log(`‚úÖ Successfully processed: ${enhancedItems.length} artifacts`);
